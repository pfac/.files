#!/bin/sh
# Provision the current system using Ansible.
set -e

# Set default values
BECOME_ASK_PASS=''

# Detect system
SYSTEM="$(uname)"
case "$SYSTEM" in
  Linux)
    if [ -f /etc/os-release ]; then
      SYSTEM="$SYSTEM:$(grep '^NAME=' /etc/os-release | cut -d= -f2 | sed 's/"//g' | awk -c '{ print $1 }')"
    elif [ -f /etc/lsb-release ]; then
      SYSTEM="$SYSTEM:$(grep DISTRIB_ID /etc/lsb-release | cut -d= -f2)"
    fi
esac

# Detect privileges
[ -t 0 ] && [ "$(whoami)" != 'root' ] && BECOME_ASK_PASS='-K'

# Process options
while getopts 'd:' option; do
  case "$option" in
    d)
      cd "$OPTARG"
      ;;
    *)
      echo "Unknown option '$option'" >&2
      exit 2
  esac
done

# Run Ansible playbooks
case "$SYSTEM" in
  Darwin)
    echo '==> Provisioning macOS system with Ansible'
    ansible-playbook $BECOME_ASK_PASS ansible/darwin.yml
    ;;
  Linux:Ubuntu)
    echo '==> Provisioning Ubuntu system with Ansible (sudo required)'
    ansible-playbook $BECOME_ASK_PASS ansible/linux-ubuntu.yml
    ;;
  *)
    echo "Current system '$SYSTEM' is not supported. Aborting" >&2
    exit 1
esac

echo '\o/ System provision complete'
